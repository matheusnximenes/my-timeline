{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/matheusximenes/bible-timeline/src/types/timelineEvents.ts"],"sourcesContent":["export enum Labels {\n  GENESIS = \"genesis\",\n  CHARACTERS = \"characters\",\n  JW_EVENTS = \"jw events\",\n  BIBLES = \"bibles\",\n  PROPHESIES = \"prophesies\",\n  CHRIST_PROPHESIES = \"Christ prophesies\",\n  JESUS = \"jesus\",\n  BIBLE_EVENTS = \"bible events\",\n}\n\nexport enum Era {\n  BC = \"BC\",\n  EC = \"EC\",\n}\n\nexport enum Type {\n  ACCURATE = \"accurate\",\n  INACCURATE = \"inaccurate\",\n}\n\nexport enum BibleBook {\n  // Old Testament\n  GENESIS = \"genesis\",\n  EXODUS = \"exodus\",\n  LEVITICUS = \"leviticus\",\n  NUMBERS = \"numbers\",\n  DEUTERONOMY = \"deuteronomy\",\n  JOSHUA = \"joshua\",\n  JUDGES = \"judges\",\n  RUTH = \"ruth\",\n  FIRST_SAMUEL = \"1 samuel\",\n  SECOND_SAMUEL = \"2 samuel\",\n  FIRST_KINGS = \"1 kings\",\n  SECOND_KINGS = \"2 kings\",\n  FIRST_CHRONICLES = \"1 chronicles\",\n  SECOND_CHRONICLES = \"2 chronicles\",\n  EZRA = \"ezra\",\n  NEHEMIAH = \"nehemiah\",\n  ESTHER = \"esther\",\n  JOB = \"job\",\n  PSALMS = \"psalms\",\n  PROVERBS = \"proverbs\",\n  ECCLESIASTES = \"ecclesiastes\",\n  SONG_OF_SOLOMON = \"song of solomon\",\n  ISAIAH = \"isaiah\",\n  JEREMIAH = \"jeremiah\",\n  LAMENTATIONS = \"lamentations\",\n  EZEKIEL = \"ezekiel\",\n  DANIEL = \"daniel\",\n  HOSEA = \"hosea\",\n  JOEL = \"joel\",\n  AMOS = \"amos\",\n  OBADIAH = \"obadiah\",\n  JONAH = \"jonah\",\n  MICAH = \"micah\",\n  NAHUM = \"nahum\",\n  HABAKKUK = \"habakkuk\",\n  ZEPHANIAH = \"zephaniah\",\n  HAGGAI = \"haggai\",\n  ZECHARIAH = \"zechariah\",\n  MALACHI = \"malachi\",\n\n  // New Testament\n  MATTHEW = \"matthew\",\n  MARK = \"mark\",\n  LUKE = \"luke\",\n  JOHN = \"john\",\n  ACTS = \"acts\",\n  ROMANS = \"romans\",\n  FIRST_CORINTHIANS = \"1 corinthians\",\n  SECOND_CORINTHIANS = \"2 corinthians\",\n  GALATIANS = \"galatians\",\n  EPHESIANS = \"ephesians\",\n  PHILIPPIANS = \"philippians\",\n  COLOSSIANS = \"colossians\",\n  FIRST_THESSALONIANS = \"1 thessalonians\",\n  SECOND_THESSALONIANS = \"2 thessalonians\",\n  FIRST_TIMOTHY = \"1 timothy\",\n  SECOND_TIMOTHY = \"2 timothy\",\n  TITUS = \"titus\",\n  PHILEMON = \"philemon\",\n  HEBREWS = \"hebrews\",\n  JAMES = \"james\",\n  FIRST_PETER = \"1 peter\",\n  SECOND_PETER = \"2 peter\",\n  FIRST_JOHN = \"1 john\",\n  SECOND_JOHN = \"2 john\",\n  THIRD_JOHN = \"3 john\",\n  JUDE = \"jude\",\n  REVELATION = \"revelation\",\n}\n\nexport interface DateInfo {\n  year: number;\n  era: Era;\n  type: Type;\n}\n\nexport interface CustomStyle {\n  bgColor?: string;\n  color?: string;\n  lineType?: string;\n}\n\nexport interface Source {\n  name: string;\n  link: string;\n}\n\nexport interface BibleReference {\n  book: BibleBook;\n  chapter: number;\n  verses: string;\n  link: string;\n}\n\nexport interface OtherResource {\n  name: string;\n  srcUrl: string;\n  order: number;\n}\n\nexport interface TimelineEvent {\n  id: number;\n  order: number;\n  title: string;\n  description?: string;\n  start: DateInfo;\n  end?: DateInfo;\n  custom?: CustomStyle;\n  sources?: Source[];\n  bible?: BibleReference[];\n  imgUrl?: string;\n  labels?: Labels[];\n  other?: OtherResource[];\n  isLandmark?: boolean;\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAO,IAAA,AAAK,gCAAA;;;;;;;;;WAAA;;AAWL,IAAA,AAAK,6BAAA;;;WAAA;;AAKL,IAAA,AAAK,8BAAA;;;WAAA;;AAKL,IAAA,AAAK,mCAAA;IACV,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAyChB,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;WA1CN","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///Users/matheusximenes/bible-timeline/src/data/data.ts"],"sourcesContent":["import { CustomStyle } from \"./../types/timelineEvents\";\nimport {\n  BibleBook,\n  Era,\n  Labels,\n  TimelineEvent,\n  Type,\n} from \"@/types/timelineEvents\";\n\nexport const data: TimelineEvent[] = [\n  {\n    id: 1,\n    order: 100,\n    title: \"Jesus Born\",\n    description: \"Adam 2\",\n    start: {\n      year: 0,\n      era: Era.EC,\n      type: Type.ACCURATE,\n    },\n    end: {\n      year: 30,\n      era: Era.EC,\n      type: Type.ACCURATE,\n    },\n    custom: {\n      bgColor: \"white\",\n      color: \"red\",\n      lineType: \"solid\",\n    },\n    sources: [{ name: \"doc\", link: \"jw.org\" }],\n    bible: [\n      {\n        book: BibleBook.GENESIS,\n        chapter: 1,\n        verses: \"1-2\",\n        link: \"https://www.jw.org\",\n      },\n    ],\n    imgUrl: \"https://www.jw.org\",\n    labels: [\n      Labels.GENESIS,\n      Labels.CHARACTERS,\n      Labels.JW_EVENTS,\n      Labels.BIBLES,\n      Labels.PROPHESIES,\n      Labels.CHRIST_PROPHESIES,\n      Labels.JESUS,\n      Labels.BIBLE_EVENTS,\n    ],\n    other: [\n      {\n        name: \"Article\",\n        srcUrl: \"link\",\n        order: 0,\n      },\n      {\n        name: \"Book\",\n        srcUrl: \"link\",\n        order: 1,\n      },\n      {\n        name: \"Text\",\n        srcUrl: \"link\",\n        order: 2,\n      },\n      {\n        name: \"Pespicaz\",\n        srcUrl: \"link\",\n        order: 3,\n      },\n      {\n        name: \"Img\",\n        srcUrl: \"link\",\n        order: 4,\n      },\n    ],\n  },\n  {\n    id: 2,\n    order: 101,\n    title: \"Jesus Ministry\",\n    description: \"Adam 2\",\n    start: {\n      year: 30,\n      era: Era.EC,\n      type: Type.ACCURATE,\n    },\n    end: {\n      year: 33,\n      era: Era.EC,\n      type: Type.ACCURATE,\n    },\n  },\n  {\n    id: 6,\n    order: 1,\n    title: \"Adam\",\n    description: \"Adam 2\",\n    start: {\n      year: 4026,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n    end: {\n      year: 3096,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n  },\n\n  {\n    id: 5,\n    order: 0,\n    title: \"Creation\",\n    description: \"Adam 2\",\n    start: {\n      year: 4100,\n      era: Era.BC,\n      type: Type.INACCURATE,\n    },\n    end: {\n      year: 4025,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n    custom: {\n      bgColor: \"gray\",\n    },\n  },\n  {\n    id: 7,\n    order: 6,\n    title: \"Enoch\",\n    description: \"Adam 2\",\n    start: {\n      year: 3404,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n    end: {\n      year: 3039,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n    labels: [Labels.GENESIS],\n  },\n  {\n    id: 8,\n    order: 2,\n    title: \"Anos\",\n    description: \"Adam 2\",\n    start: {\n      year: 3791,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n    end: {\n      year: 2886,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n    labels: [Labels.GENESIS],\n  },\n  {\n    id: 9,\n    order: 7,\n    title: \"Methusalah\",\n    description: \"Adam 2\",\n    start: {\n      year: 3338,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n    end: {\n      year: 2370,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n    labels: [Labels.GENESIS],\n  },\n  {\n    id: 10,\n    order: 3,\n    title: \"Jarede\",\n    description: \"Adam 2\",\n    start: {\n      year: 3566,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n    end: {\n      year: 2604,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n  },\n  {\n    id: 11,\n    order: 8,\n    title: \"Lameque\",\n    description: \"Adam 2\",\n    start: {\n      year: 3152,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n    end: {\n      year: 2375,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n  },\n  {\n    id: 12,\n    order: 9,\n    title: \"No√©\",\n    description: \"Adam 2\",\n    start: {\n      year: 2970,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n    end: {\n      year: 2020,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n  },\n  {\n    id: 13,\n    order: 10,\n    title: \"Diluvio\",\n    description: \"Adam 2\",\n    start: {\n      year: 2370,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n    end: {\n      year: 2369,\n      era: Era.BC,\n      type: Type.ACCURATE,\n    },\n    custom: {\n      bgColor: \"red\",\n    },\n    isLandmark: true,\n  },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///Users/matheusximenes/bible-timeline/src/utils/index.ts"],"sourcesContent":["import { DateInfo, Era, TimelineEvent } from \"@/types/timelineEvents\";\n\nexport const getIntermediaryYearsEC = (\n  currentYear: number,\n  intermediaryYear: number\n): number[] => {\n  const years: number[] = [];\n\n  // Start from 0 and add every 100 years up to currentYear\n  for (\n    let year = intermediaryYear;\n    year <= currentYear;\n    year += intermediaryYear\n  ) {\n    years.push(year);\n  }\n\n  // Add current year if it's not already included (when currentYear % 100 !== 0)\n  if (currentYear % intermediaryYear !== 0) {\n    years.push(currentYear);\n  }\n\n  return years;\n};\n\nexport const getIntermediaryYearsBC = (\n  latestYear: number,\n  intermediaryYear: number\n): number[] => {\n  const years: number[] = [];\n\n  // Start from 0 and add every 100 years up to currentYear\n  for (let year = latestYear; year >= 0; year -= intermediaryYear) {\n    years.push(year);\n  }\n\n  // Add current year if it's not already included (when currentYear % 100 !== 0)\n  if (latestYear % intermediaryYear !== 0) {\n    years.push(latestYear);\n  }\n\n  return years;\n};\n\nexport const getHighestBCOrLowestEC = (events: TimelineEvent[]): DateInfo => {\n  // Find all BC and EC DateInfo objects\n  const bcDates: DateInfo[] = [];\n  const ecDates: DateInfo[] = [];\n\n  events.forEach((event) => {\n    if (event.start.era === Era.BC) {\n      bcDates.push(event.start);\n    }\n    if (event.end && event.end.era === Era.BC) {\n      bcDates.push(event.end);\n    }\n    if (event.start.era === Era.EC) {\n      ecDates.push(event.start);\n    }\n    if (event.end && event.end.era === Era.EC) {\n      ecDates.push(event.end);\n    }\n  });\n\n  // If there are BC dates, return the one with highest year (closest to 0)\n  if (bcDates.length > 0) {\n    return bcDates.reduce((highest, current) =>\n      current.year > highest.year ? current : highest\n    );\n  }\n\n  // If no BC dates, return the EC date with lowest year\n  if (ecDates.length > 0) {\n    return ecDates.reduce((lowest, current) =>\n      current.year < lowest.year ? current : lowest\n    );\n  }\n\n  // Fallback if no events found - return year 0 EC with accurate type\n  return {\n    year: 0,\n    era: Era.EC,\n    type: events[0]?.start?.type || Era.BC,\n  };\n};\n\nexport const getAllLabels = (data: TimelineEvent[]) => {\n  const labels = new Set<string>();\n\n  data.forEach((item) => {\n    if (item.labels && Array.isArray(item.labels)) {\n      item.labels.forEach((label) => labels.add(label));\n    }\n  });\n\n  return Array.from(labels) as string[];\n};\n\nexport const capitalizeFirstLetter = (val: string) => {\n  return String(val).charAt(0).toUpperCase() + String(val).slice(1);\n};\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AAEO,MAAM,yBAAyB,CACpC,aACA;IAEA,MAAM,QAAkB,EAAE;IAE1B,yDAAyD;IACzD,IACE,IAAI,OAAO,kBACX,QAAQ,aACR,QAAQ,iBACR;QACA,MAAM,IAAI,CAAC;IACb;IAEA,+EAA+E;IAC/E,IAAI,cAAc,qBAAqB,GAAG;QACxC,MAAM,IAAI,CAAC;IACb;IAEA,OAAO;AACT;AAEO,MAAM,yBAAyB,CACpC,YACA;IAEA,MAAM,QAAkB,EAAE;IAE1B,yDAAyD;IACzD,IAAK,IAAI,OAAO,YAAY,QAAQ,GAAG,QAAQ,iBAAkB;QAC/D,MAAM,IAAI,CAAC;IACb;IAEA,+EAA+E;IAC/E,IAAI,aAAa,qBAAqB,GAAG;QACvC,MAAM,IAAI,CAAC;IACb;IAEA,OAAO;AACT;AAEO,MAAM,yBAAyB,CAAC;QAsC7B,gBAAA;IArCR,sCAAsC;IACtC,MAAM,UAAsB,EAAE;IAC9B,MAAM,UAAsB,EAAE;IAE9B,OAAO,OAAO,CAAC,CAAC;QACd,IAAI,MAAM,KAAK,CAAC,GAAG,KAAK,wIAAG,CAAC,EAAE,EAAE;YAC9B,QAAQ,IAAI,CAAC,MAAM,KAAK;QAC1B;QACA,IAAI,MAAM,GAAG,IAAI,MAAM,GAAG,CAAC,GAAG,KAAK,wIAAG,CAAC,EAAE,EAAE;YACzC,QAAQ,IAAI,CAAC,MAAM,GAAG;QACxB;QACA,IAAI,MAAM,KAAK,CAAC,GAAG,KAAK,wIAAG,CAAC,EAAE,EAAE;YAC9B,QAAQ,IAAI,CAAC,MAAM,KAAK;QAC1B;QACA,IAAI,MAAM,GAAG,IAAI,MAAM,GAAG,CAAC,GAAG,KAAK,wIAAG,CAAC,EAAE,EAAE;YACzC,QAAQ,IAAI,CAAC,MAAM,GAAG;QACxB;IACF;IAEA,yEAAyE;IACzE,IAAI,QAAQ,MAAM,GAAG,GAAG;QACtB,OAAO,QAAQ,MAAM,CAAC,CAAC,SAAS,UAC9B,QAAQ,IAAI,GAAG,QAAQ,IAAI,GAAG,UAAU;IAE5C;IAEA,sDAAsD;IACtD,IAAI,QAAQ,MAAM,GAAG,GAAG;QACtB,OAAO,QAAQ,MAAM,CAAC,CAAC,QAAQ,UAC7B,QAAQ,IAAI,GAAG,OAAO,IAAI,GAAG,UAAU;IAE3C;IAEA,oEAAoE;IACpE,OAAO;QACL,MAAM;QACN,KAAK,wIAAG,CAAC,EAAE;QACX,MAAM,EAAA,WAAA,MAAM,CAAC,EAAE,cAAT,gCAAA,iBAAA,SAAW,KAAK,cAAhB,qCAAA,eAAkB,IAAI,KAAI,wIAAG,CAAC,EAAE;IACxC;AACF;AAEO,MAAM,eAAe,CAAC;IAC3B,MAAM,SAAS,IAAI;IAEnB,KAAK,OAAO,CAAC,CAAC;QACZ,IAAI,KAAK,MAAM,IAAI,MAAM,OAAO,CAAC,KAAK,MAAM,GAAG;YAC7C,KAAK,MAAM,CAAC,OAAO,CAAC,CAAC,QAAU,OAAO,GAAG,CAAC;QAC5C;IACF;IAEA,OAAO,MAAM,IAAI,CAAC;AACpB;AAEO,MAAM,wBAAwB,CAAC;IACpC,OAAO,OAAO,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,OAAO,KAAK,KAAK,CAAC;AACjE","debugId":null}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":["file:///Users/matheusximenes/bible-timeline/src/providers/StateProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { data } from \"@/data/data\";\nimport { TimelineEvent } from \"@/types/timelineEvents\";\nimport { getAllLabels } from \"@/utils\";\nimport { createContext, ReactNode, useContext, useState } from \"react\";\n\nconst defaultContext = {};\nconst StateContext = createContext(defaultContext);\n\ninterface IStateProvider {\n  children: ReactNode;\n}\n\nexport const StateProvider = ({ children }: IStateProvider) => {\n  const [theme, setTheme] = useState(\"light\");\n  const [activeLabels, setLabels] = useState<string[]>(getAllLabels(data));\n  const [activeEvents, setActiveEvents] = useState<TimelineEvent[]>([]);\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\n  };\n\n  const toggleLabels = (label: string) => {\n    setLabels((prevLabels) =>\n      prevLabels.includes(label)\n        ? prevLabels.filter((l) => l !== label)\n        : [...prevLabels, label]\n    );\n  };\n\n  return (\n    <StateContext.Provider\n      value={{\n        theme,\n        toggleTheme,\n        activeLabels,\n        toggleLabels,\n        activeEvents,\n        setActiveEvents,\n      }}\n    >\n      {children}\n    </StateContext.Provider>\n  );\n};\n\nexport const useStateProvider = () => {\n  return useContext(StateContext);\n};\n"],"names":[],"mappings":";;;;;;;AAEA;AAEA;AACA;;;AALA;;;;AAOA,MAAM,iBAAiB,CAAC;AACxB,MAAM,6BAAe,IAAA,8KAAa,EAAC;AAM5B,MAAM,gBAAgB;QAAC,EAAE,QAAQ,EAAkB;;IACxD,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAC;IACnC,MAAM,CAAC,cAAc,UAAU,GAAG,IAAA,yKAAQ,EAAW,IAAA,wIAAY,EAAC,8HAAI;IACtE,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,yKAAQ,EAAkB,EAAE;IACpE,MAAM,cAAc;QAClB,SAAS,CAAC,YAAe,cAAc,UAAU,SAAS;IAC5D;IAEA,MAAM,eAAe,CAAC;QACpB,UAAU,CAAC,aACT,WAAW,QAAQ,CAAC,SAChB,WAAW,MAAM,CAAC,CAAC,IAAM,MAAM,SAC/B;mBAAI;gBAAY;aAAM;IAE9B;IAEA,qBACE,6LAAC,aAAa,QAAQ;QACpB,OAAO;YACL;YACA;YACA;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP;GA9Ba;KAAA;AAgCN,MAAM,mBAAmB;;IAC9B,OAAO,IAAA,2KAAU,EAAC;AACpB;IAFa","debugId":null}}]
}